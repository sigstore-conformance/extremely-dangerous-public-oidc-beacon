name: Trigger for extremely dangerous OIDC beacon

# Schedule run for every 5 minutes, the minimum interval allowed. GitHub seems
# to treat this as a suggestion when they're experiencing high load, letting
# around an hour elapse between jobs.
on:
  schedule:
    - cron: "*/5 * * * *"
  push:
    branches:
      - main
  workflow_dispatch:

# Make sure we cancel any in-progress OIDC generation jobs if they're already queued.
#
# When there's heavy traffic in the GitHub queue, we're not going to be able to keep up with
# generating tokens every 5 minutes and we want to ensure that we don't overlap and queue multiple
# jobs at once.
concurrency:
  group: oidc-beacon
  cancel-in-progress: true

# We trigger multiple beacon runs per workflow run, generating one token per
# beacon run to work around GitHub Actions scheduling limitations. Each trigger
# run should take around 1 hour to complete, if allowed to run to completion.
jobs:
  trigger-extremely-dangerous-oidc-beacon:
    permissions:
      # Needed to trigger a new workflow run.
      actions: write
    strategy:
      max-parallel: 1
      matrix:
        # With `max-parallel: 1`, GHA should start the matrix items in the
        # defined order.
        # https://github.com/actions/runner/issues/703
        # This number of runs should cover approximately an hour's worth of
        # tokens.
        sleep-duration:
          - 0
          - 300
          - 300 # 15m
          - 300
          - 300
          - 300 # 30m
          - 300
          - 300
          - 300 # 45m
          - 300
          - 300
          - 300 # 60m
    runs-on: ubuntu-latest
    steps:
      - name: Wait for the previous token to expire
        run: |
          sleep ${{ matrix.sleep-duration }}
      # We trigger the beacon workflow via this mechanism instead of reusable
      # workflows to work around an issue in GitHub Actions artifacts. The
      # `workflow_call` mechanism ("reusable workflows") creates a job for each
      # workflow call. Those jobs are all part of a single "workflow run", i.e.
      # the associated triggering run. When artifacts are uploaded within
      # workflow jobs, they are not visible in the GitHub API until their
      # associated "workflow run" completes. For our use-case, this is
      # unacceptable as we have a long-lived workflow run controlling the
      # dispatch of these jobs and we want to see artifacts (our OIDC tokens)
      # immediately following the completion of the triggered jobs. Using
      # `workflow_dispatch` creates a new "workflow run" instead of a job, making
      # each of our generated OIDC tokens immediately visible.
      - name: Trigger OIDC beacon
        run: |
          BEACON_NAME="extremely-dangerous-oidc-beacon.yml"
          REPO_URL="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}"
          curl -L \
            --fail \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${REPO_URL}/actions/workflows/${BEACON_NAME}/dispatches" \
            -d "{\"ref\":\"${GITHUB_REF}\"}" \
