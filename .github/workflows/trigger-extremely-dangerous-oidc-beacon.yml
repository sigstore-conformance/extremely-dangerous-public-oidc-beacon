name: Trigger for extremely dangerous OIDC beacon

# Run every 5 minutes so we always have a valid OIDC token for clients to use.
on:
  schedule:
    - cron: '*/5 * * * *'

# Make sure we cancel any in-progress OIDC generation jobs if they're already queued.
#
# When there's heavy traffic in the GitHub queue, we're not going to be able to keep up with
# generating tokens every 5 minutes and we want to ensure that we don't overlap and queue multiple
# jobs at once.
concurrency:
  group: oidc-beacon
  cancel-in-progress: true

# We generate multiple tokens per workflow run using identical jobs to work
# around GitHub Actions scheduling limitations. Each new token overwrites the
# previous token associated with the workflow artifact bundle, if it exists.
# Each run should take around 1 hour to complete, if allowed to run to
# completion.
jobs:
  trigger-extremely-dangerous-oidc-beacon:
    permissions:
      # Needed to trigger a new workflow run.
      actions: write
    strategy:
      max-parallel: 1
      matrix:
        # With `max-parallel: 1`, GHA should start the matrix items in the
        # defined order.
        # https://github.com/actions/runner/issues/703
        # This number of runs should cover approximately an hour's worth of
        # tokens.
        sleep-duration:
          [0, 300, 300,   # 15m
          300, 300, 300,  # 30m
          300, 300, 300,  # 45m
          300, 300, 300]  # 60m
    runs-on: ubuntu-latest
    steps:
      - name: Wait for the previous token to expire
        run: |
          sleep ${{ matrix.sleep-duration }}
      - name: Trigger OIDC beacon
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: extremely-dangerous-oidc-beacon.yml
