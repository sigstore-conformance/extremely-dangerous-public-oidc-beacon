# !! DANGER !!
#
# This workflow retrieves an OIDC identity token from GitHub Actions
# and INTENTIONALLY leaks it as an artifact. As a result, the leaked
# token is NOT SECRET AND MUST NOT BE CONSIDERED A VALID IDENTITY
# FOR SIGNING OR ANY OTHER PURPOSE.

name: Extremely dangerous OIDC beacon

# Run every 5 minutes so we always have a valid OIDC token for clients to use.
on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

# Make sure we cancel any in-progress OIDC generation jobs if they're already queued.
#
# When there's heavy traffic in the GitHub queue, we're not going to be able to keep up with
# generating tokens every 5 minutes and we want to ensure that we don't overlap and queue multiple
# jobs at once.
concurrency:
  group: oidc-beacon
  cancel-in-progress: true

# We generate 3 tokens per workflow run using identical jobs to work around GitHub Actions scheduling
# limitations. Each new token overwrites the previous token associated with the workflow artifact bundle,
# if it exists. Each run should take around 10 minutes to complete.
jobs:
  extremely-dangerous-oidc-broadcaster:
    permissions:
      # Needed to access the workflow's OIDC identity.
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        # With `max-parallel: 1`, GHA should start the matrix items in the defined order.
        # https://github.com/actions/runner/issues/703
        sleep-duration: [300, 300, 0]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - name: Retrieve OIDC token
        run: |
          python -m pip install id &&
          python -m id sigstore > ./oidc-token.txt
      - name: Upload OIDC token artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: oidc-token
          path: ./oidc-token.txt
      - name: Wait 5 minutes before leaking another token
        run: |
          sleep ${{ matrix.sleep-duration }}
